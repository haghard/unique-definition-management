//https://doc.akka.io/docs/akka-persistence-jdbc/current/configuration.html#reference-configuration
//https://doc.akka.io/libraries/akka-persistence-jdbc/current/configuration.html#reference-configuration
akka {
  persistence {
    journal {
      plugin = "jdbc-journal"
      // Enable the line below to automatically start the journal when the actorsystem is started
      // auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      // Enable the line below to automatically start the snapshot-store when the actorsystem is started
      // auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}

jdbc-journal {
  #slick = ${slick}
  use-shared-db = "slick"
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  use-shared-db = "slick"
  #slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  #slick = ${slick}
  use-shared-db = "slick"

  max-buffer-size = 1000

  # Dictates how often the system polls for new events when idle, also defaulting to 1s. In mostly idle applications that still require low latencies, it is important to adjust both query-delay and refresh-interval to achieve optimal performance. Lowering just one of these values might not be sufficient for reducing latency.
  refresh-interval = 200ms

  # Configuration controls how often the actor queries for new data. The default is 1s, but this can be set lower for latency-sensitive applications to reduce the time between data retrievals.
  journal-sequence-retrieval.query-delay = 200ms
}

# the akka-persistence-jdbc provider in use for durable state store
jdbc-durable-state-store {
  #slick = ${slick}
  use-shared-db = "slick"
}

akka-persistence-jdbc {
  shared-databases {
    slick {
      socket-timeout = 3000
      profile = "slick.jdbc.MySQLProfile$"
      dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
      db {
        url = "jdbc:mysql://localhost:3306/udefinitions?serverTimezone=UTC&socketTimeout="${akka-persistence-jdbc.shared-databases.slick.socket-timeout}
        user = ${mysql.properties.user}
        password = ${mysql.properties.password}
        driver = "com.mysql.cj.jdbc.Driver"
        numThreads = 5
        maxConnections = 5
        minConnections = 5
        transactionIsolation = REPEATABLE_READ
      }
    }
  }
}

mysql = {
  connectionPool = "HikariCP"
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"

  #BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
  #BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ;
  #BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;

  #G2-item: Item Anti-dependency Cycles (write skew on disjoint read),
  #G2: Anti-Dependency Cycles (write skew on predicate read)
  transactionIsolation = REPEATABLE_READ


  properties = {
    serverName = "localhost"
    portNumber = "3306"
    databaseName = "udefinitions"
    user = "root"
    password = "root"
  }
  numThreads = 5
}
