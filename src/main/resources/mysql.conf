//https://doc.akka.io/docs/akka-persistence-jdbc/current/configuration.html#reference-configuration
//https://doc.akka.io/libraries/akka-persistence-jdbc/current/configuration.html#reference-configuration
akka {
  persistence {
    journal {
      plugin = "jdbc-journal"
      // Enable the line below to automatically start the journal when the actorsystem is started
      // auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      // Enable the line below to automatically start the snapshot-store when the actorsystem is started
      // auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

# the akka-persistence-jdbc provider in use for durable state store
jdbc-durable-state-store {
  slick = ${slick}
}

slick {
  socket-timeout = 3000
  profile = "slick.jdbc.MySQLProfile$"
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
  db {
    url = "jdbc:mysql://localhost:3306/udefinitions?serverTimezone=UTC&socketTimeout="${slick.socket-timeout}
    user = ${mysql.properties.user}
    password = ${mysql.properties.password}
    driver = "com.mysql.cj.jdbc.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 5
    transactionIsolation = REPEATABLE_READ
  }
}

mysql = {
  connectionPool = "HikariCP"
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"

  #BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
  #BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ;
  #BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;

  #G2-item: Item Anti-dependency Cycles (write skew on disjoint read),
  #G2: Anti-Dependency Cycles (write skew on predicate read)
  transactionIsolation = REPEATABLE_READ


  properties = {
    serverName = "localhost"
    portNumber = "3306"
    databaseName = "udefinitions"
    user = "root"
    password = "root"
  }
  numThreads = 5
}
